package main

import (
	"fmt"
	"unsafe"
)

// Описание алгоритма:
// Инициализация: Запускаем внешний цикл, который отвечает за количество проходов по массиву. Длина массива равна n.
//
// Внутренний цикл: Запускаем внутренний цикл от 0 до n-i-1. -i обеспечивает уменьшение количества проверяемых элементов,
// так как после каждого прохода на i-й позиции от конца будет стоять отсортированный элемент. -1 используется для
// избежания выхода за пределы массива при обращении к j+1 элементу.
//
// Сравнение и обмен: Во время каждого прохода внутреннего цикла сравниваются соседние элементы (arr[j] > arr[j+1]).
// Если порядок неверный, элементы меняются местами.
//
// Проверка на отсутствие обменов: Если за время одного полного прохода внутреннего цикла не было выполнено ни одного
// обмена, это означает, что массив полностью отсортирован, и дальнейшие проверки не требуются. Флаг swapped используется
// для определения, был ли выполнен обмен во время текущего прохода.
//
// В результате корректного выполнения алгоритма массив arr будет отсортирован по возрастанию.
func bubbleSort(arr []int) {
	n := len(arr)
	for i := 0; i < n; i++ {
		//swapped := false
		for j := 0; j < n-i-1; j++ { // Основная идея - здесь j < n-i-1. Сужается окно. итераций внутреннего цикла становится меньше, после обмена соседних элементов
			if arr[j] > arr[j+1] {
				arr[j], arr[j+1] = arr[j+1], arr[j]
				//swapped = true
			}
		}
		// Если в этом проходе не было перестановок,
		// массив уже отсортирован.
		//if !swapped {
		//	break
		//}
	}
}

// Алгоритм пузырьковой сортировки - это базовый алгоритм сортировки, который работает, проходя через список элементов
// множество раз и за каждый проход выполняет обмены соседних элементов, если они упорядочены неправильно.
// Этот процесс повторяется до тех пор, пока не будет выполнен проход без каких-либо свопов, что означает, что массив
// отсортирован. Сложность алгоритма пузырьковой сортировки в худшем и среднем случае составляет O(n^2), где n -
// количество элементов в массиве.
func main() {
	arr := []int{64, 34, 25, 12, 22, 11, 90}
	sizeof := unsafe.Sizeof(arr)
	fmt.Println("Размер массива:", sizeof)

	fmt.Println("Исходный массив:", arr)
	bubbleSort(arr)
	fmt.Println("Отсортированный массив:", arr)
}
